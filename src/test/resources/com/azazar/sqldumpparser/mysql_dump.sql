-- Dump generated by ChatGPT for SQL parser unit testing

-- MySQL version
-- Server version: 8.0.25-0ubuntu0.20.04.1 (Ubuntu)

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- Database creation
DROP DATABASE IF EXISTS `test_db`;
CREATE DATABASE `test_db`;
USE `test_db`;

-- Table structure for table `authors`
CREATE TABLE `authors` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- Table structure for table `books`
CREATE TABLE `books` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `publication_date` date NOT NULL,
  `author_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_author_id_idx` (`author_id`),
  CONSTRAINT `fk_author_id` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- Data insertion
INSERT INTO `authors` (`id`, `name`, `email`) VALUES
(1, 'Jane Austen', 'jane.austen@example.com'),
(2, 'Charles Dickens', 'charles.dickens@example.com');

INSERT INTO `books` (`id`, `title`, `publication_date`, `author_id`) VALUES
(1, 'Pride and Prejudice', '1813-01-28', 1),
(2, 'Great Expectations', '1861-12-01', 2);

-- Triggers
-- -- TODO : Add delimiter support
-- DELIMITER $$

-- CREATE TRIGGER `books_BEFORE_INSERT` BEFORE INSERT ON `books` FOR EACH ROW
-- BEGIN
--   IF NEW.publication_date > CURRENT_DATE THEN
--     SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Publication date cannot be in the future';
--   END IF;
-- END $$

-- DELIMITER ;

-- Stored procedures
-- -- TODO : Add delimiter support
-- DELIMITER $$

-- CREATE PROCEDURE `GetAuthorName`(IN book_id INT, OUT author_name VARCHAR(255))
-- BEGIN
--   SELECT a.name INTO author_name FROM authors a JOIN books b ON a.id = b.author_id WHERE b.id = book_id;
-- END $$

-- DELIMITER ;

-- Views
CREATE VIEW `book_info` AS
SELECT b.id AS book_id, b.title AS book_title, b.publication_date, a.name AS author_name, a.email AS author_email
FROM books b
JOIN authors a ON b.author_id = a.id;

-- Events
-- -- TODO : Add delimiter support
-- DELIMITER $$

-- CREATE EVENT IF NOT EXISTS `archive_old_books`
-- ON SCHEDULE EVERY 1 MONTH
-- STARTS '2023-04-01 00:00:00'
-- DO
-- BEGIN
--   DELETE FROM books WHERE publication_date < DATE_SUB(CURRENT_DATE, INTERVAL 100 YEAR);
-- END $$

-- DELIMITER ;

-- Clean up and restore settings
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-03-30
